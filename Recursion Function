#include<stdio.h>

typedef enum {
  JSMN_UNDEFINED = 0,
  JSMN_OBJECT = 1 << 0,
  JSMN_ARRAY = 1 << 1,
  JSMN_STRING = 1 << 2,
  JSMN_PRIMITIVE = 1 << 3
} jsmntype_t;

typedef struct jsmntok {
  jsmntype_t type;
  int start;
  int end;
  int size;
#ifdef JSMN_PARENT_LINKS
  int parent;
#endif
} jsmntok_t;

jsmntok_t t[10];

//Function_prototype
int get_depth(jsmntok_t *t);


int main(){

int j=1;
int depth;

depth=get_depth(t);

printf("%d\n",t[2].type);
//printf("value after depth is:%d\n",depth);

}

int get_depth(jsmntok_t *t){

    t->t[0].type=JSMN_OBJECT;
    t->t[1].type=JSMN_STRING;
    t->t[2].type=JSMN_OBJECT;
    /*t->type=JSMN_OBJECT;
    t++;
    t->type=JSMN_STRING;
    t++;
    t->type=JSMN_OBJECT;
    t++;*/ //It works Absolutely good. when I give a base address of the array.
    return(1);
}








